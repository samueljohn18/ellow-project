{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\Documents\\\\react-guide\\\\ellow-login-task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useState } from \"react\";\nimport { BrowserRouter, Route, RouterProvider, Routes, createBrowserRouter } from \"react-router-dom\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport Login from \"./components/pages/Login\";\nimport Home from \"./components/pages/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageRouter = createBrowserRouter([{\n  path: '/login',\n  element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 66\n  }, this)\n}, {\n  path: '/home',\n  element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 100\n  }, this)\n}]);\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  function loginHandler(email, password) {\n    setLoggedIn(true);\n  }\n  function logoutHandler() {\n    setLoggedIn(false);\n  }\n  /*return (\n    <BrowserRouter>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<MainHeader isLogged={loggedIn} onLogout={logoutHandler} />}\n        >\n          <Route\n            index\n            element={!loggedIn && <Login onLogin={loginHandler} />}\n          />\n          <Route path=\"home\" element={loggedIn && <Home />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );*/\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isLogged: loggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!loggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), loggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useState","BrowserRouter","Route","RouterProvider","Routes","createBrowserRouter","MainHeader","Login","Home","jsxDEV","_jsxDEV","pageRouter","path","element","fileName","_jsxFileName","lineNumber","columnNumber","App","_s","loggedIn","setLoggedIn","loginHandler","email","password","logoutHandler","children","isLogged","onLogout","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/samue/Documents/react-guide/ellow-login-task/src/App.js"],"sourcesContent":["import { Fragment, useState } from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  RouterProvider,\n  Routes,\n  createBrowserRouter,\n} from \"react-router-dom\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport Login from \"./components/pages/Login\";\nimport Home from \"./components/pages/Home\";\n\nconst pageRouter= createBrowserRouter([{path: '/login', element: <Login/>},{path: '/home', element:<Home/>}])\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  function loginHandler(email, password) {\n    setLoggedIn(true);\n  }\n\n  function logoutHandler() {\n    setLoggedIn(false);\n  }\n  /*return (\n    <BrowserRouter>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<MainHeader isLogged={loggedIn} onLogout={logoutHandler} />}\n        >\n          <Route\n            index\n            element={!loggedIn && <Login onLogin={loginHandler} />}\n          />\n          <Route path=\"home\" element={loggedIn && <Home />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );*/\n\n  return(<Fragment>\n    <MainHeader isLogged={loggedIn} onLogout={logoutHandler} />\n    <main>\n    {!loggedIn && <Login onLogin={loginHandler} />}\n    {loggedIn && <Home />}\n    </main>\n    </Fragment>\n  )\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,SACEC,aAAa,EACbC,KAAK,EACLC,cAAc,EACdC,MAAM,EACNC,mBAAmB,QACd,kBAAkB;AACzB,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,UAAU,GAAEN,mBAAmB,CAAC,CAAC;EAACO,IAAI,EAAE,QAAQ;EAAEC,OAAO,eAAEH,OAAA,CAACH,KAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,CAAC,EAAC;EAACL,IAAI,EAAE,OAAO;EAAEC,OAAO,eAACH,OAAA,CAACF,IAAI;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,CAAC,CAAC,CAAC;AAE7G,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAE/C,SAASsB,YAAYA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACrCH,WAAW,CAAC,IAAI,CAAC;EACnB;EAEA,SAASI,aAAaA,CAAA,EAAG;IACvBJ,WAAW,CAAC,KAAK,CAAC;EACpB;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBAAOX,OAAA,CAACX,QAAQ;IAAA2B,QAAA,gBACdhB,OAAA,CAACJ,UAAU;MAACqB,QAAQ,EAAEP,QAAS;MAACQ,QAAQ,EAAEH;IAAc;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3DP,OAAA;MAAAgB,QAAA,GACC,CAACN,QAAQ,iBAAIV,OAAA,CAACH,KAAK;QAACsB,OAAO,EAAEP;MAAa;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC7CG,QAAQ,iBAAIV,OAAA,CAACF,IAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEf;AAACE,EAAA,CAnCQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}