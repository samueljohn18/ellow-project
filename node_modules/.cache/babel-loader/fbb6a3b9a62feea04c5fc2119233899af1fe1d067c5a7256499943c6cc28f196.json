{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samue\\\\Documents\\\\react-guide\\\\ellow-login-task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useState } from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport Login from \"./components/pages/Login\";\nimport Home from \"./components/pages/Home\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport List from \"./components/pages/List\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isuemail, setisuemail] = useState(\"\");\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   const checkLoggedin = localStorage.getItem(\"isLoggedIn\");\n  //   if (checkLoggedin === \"1\") setLoggedIn(true);\n  //   setisuemail(localStorage.getItem(\"email\"));\n  // }, []);\n\n  function loginHandler(uemail, upassword) {\n    setLoggedIn(true);\n    // localStorage.setItem(\"isLoggedIn\", \"1\");\n    // localStorage.setItem(\"email\", uemail);\n    setisuemail(uemail);\n    navigate(\"/home\");\n  }\n  function logoutHandler() {\n    //localStorage.removeItem(\"isLoggedIn\");\n    //localStorage.removeItem(\"email\");\n    setLoggedIn(false);\n    navigate(\"/\");\n  }\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: !loggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), loggedIn && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(MainHeader, {\n          email: isuemail,\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/list\",\n        element: /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f82usampOQ8JDbqhvmAh5yVerWM=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useState","Route","Routes","useNavigate","Login","Home","Dashboard","List","MainHeader","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","isuemail","setisuemail","navigate","loginHandler","uemail","upassword","logoutHandler","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","email","onLogout","index","_c","$RefreshReg$"],"sources":["C:/Users/samue/Documents/react-guide/ellow-login-task/src/App.js"],"sourcesContent":["import { Fragment, useState } from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport Login from \"./components/pages/Login\";\nimport Home from \"./components/pages/Home\";\nimport Dashboard from \"./components/pages/Dashboard\";\nimport List from \"./components/pages/List\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [isuemail, setisuemail] = useState(\"\");\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //   const checkLoggedin = localStorage.getItem(\"isLoggedIn\");\n  //   if (checkLoggedin === \"1\") setLoggedIn(true);\n  //   setisuemail(localStorage.getItem(\"email\"));\n  // }, []);\n\n  function loginHandler(uemail, upassword) {\n    setLoggedIn(true);\n    // localStorage.setItem(\"isLoggedIn\", \"1\");\n    // localStorage.setItem(\"email\", uemail);\n    setisuemail(uemail);\n    navigate(\"/home\");\n  }\n\n  function logoutHandler() {\n    //localStorage.removeItem(\"isLoggedIn\");\n    //localStorage.removeItem(\"email\");\n    setLoggedIn(false);\n    navigate(\"/\");\n  }\n  return (\n    <Routes>\n      <Route path=\"/\" element={!loggedIn && <Login onLogin={loginHandler} />} />\n      {loggedIn && (\n        <Fragment>\n          <Route\n            path=\"/home\"\n            element={<MainHeader email={isuemail} onLogout={logoutHandler} />}\n          />\n          <Route index element={<Home />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/list\" element={<List />} />\n          </Fragment>\n      )}\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}